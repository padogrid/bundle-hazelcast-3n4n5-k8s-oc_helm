#!/usr/bin/env bash
SCRIPT_DIR="$(cd -P -- "$(dirname -- "$0")" && pwd -P)"
. $SCRIPT_DIR/.addonenv.sh

EXECUTABLE="`basename $0`"

if [ "$HELP" == "true" ]; then
cat <<EOF

NAME
   $EXECUTABLE - Build a Hazelcast OpenShift Operator environment

SYNOPSIS
   $EXECUTABLE [-?]

DESCRIPTION
   Builds a Hazelcast OpenShift Operator environment by downloading all the necessary files and making adjustments
   to the downloaded files. 

DEFAULT:
   ./$EXECUTABLE

EOF
exit
fi

if [ "$(which helm)" == "" ]; then
   echo >&2 "ERROR: The 'helm' executable not found. Command aborted."
   exit 1
fi

#
# Add Hazelcast Helm repo
#
helm repo add hazelcast https://hazelcast-charts.s3.amazonaws.com/
helm repo update
echo ""

#
# Set license key
#
IMDG_LICENSE_KEY_BASE64=""
MC_LICENSE_KEY_BASE64=""
if [[ ${OS_NAME} == DARWIN* ]]; then
   if [ "$IMDG_LICENSE_KEY" != "" ]; then
      IMDG_LICENSE_KEY_BASE64=$(echo -n "$IMDG_LICENSE_KEY" | base64)
   fi
   if [ "$MC_LICENSE_KEY" != "" ]; then
      MC_LICENSE_KEY_BASE64=$(echo -n "$MC_LICENSE_KEY" | base64)
   fi
else
   if [ "$IMDG_LICENSE_KEY" != "" ]; then
      IMDG_LICENSE_KEY_BASE64=$(echo -n "$IMDG_LICENSE_KEY" | base64 -w 0)
   fi
   if [ "$MC_LICENSE_KEY" != "" ]; then
      MC_LICENSE_KEY_BASE64=$(echo -n "$MC_LICENSE_KEY" | base64 -w 0)
   fi
fi
if [ "$IMDG_LICENSE_KEY_BASE64" != "" ]; then
   sed "s/<base64-hz-license-key>/$IMDG_LICENSE_KEY_BASE64/" "$APP_DIR/etc/hazelcast-enterprise/hz-secret.yaml" > "$APP_DIR/hazelcast/hz-secret.yaml"
fi
if [ "$MC_LICENSE_KEY_BASE64" != "" ]; then
   sed "s/<base64-hz-license-key>/$MC_LICENSE_KEY_BASE64/" "$APP_DIR/etc/hazelcast-enterprise/mc-secret.yaml" > "$APP_DIR/hazelcast/mc-secret.yaml"
fi

#
# Display build information
#
if [ "$IMDG_LICENSE_KEY_BASE64" != "" ] || [ "$IMDG_LICENSE_KEY_BASE64" != "" ]; then
   echo "Generated license secret files:"
   if [ "$IMDG_LICENSE_KEY_BASE64" != "" ]; then
      echo "   $APP_DIR/hazelcast/hz-secret.yaml"
   fi
   if [ "$MC_LICENSE_KEY_BASE64" != "" ]; then
      echo "   $APP_DIR/hazelcast/mc-secret.yaml"
   fi
   echo ""
fi
echo "Build complete."
